[versions]
archunit = "1.4.1"
auth0-jwt = "4.5.0"
httpclient5 = "5.5"
jackson-kotlin = "2.19.0"
konvert = "4.1.0"
kotlin = "2.1.21"
liquibase = "4.32.0"
mapstruct = "1.6.3"
mockk = "1.14.2"
postgresql = "42.7.6"
slf4j = "2.0.17"
spring-boot = "3.5.0"
springdoc-openapi = "2.8.8"
testcontainers = "1.21.1"

[libraries]
apache-httpclient5 = { module = "org.apache.httpcomponents.client5:httpclient5-testing", version.ref = "httpclient5" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }
auth0-java-jwt = { module = "com.auth0:java-jwt", version.ref = "auth0-jwt" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
mapstruct-api = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstruct-kapt = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
springboot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
springboot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot" }
springboot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
springboot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot" }
springboot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
springboot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
springboot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
springboot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
springboot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
springboot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

[plugins]
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }

[bundles]
springboot = [
    "springboot-starter-data-jpa",
    "springboot-starter-mail",
    "springboot-starter-security",
    "springboot-starter-thymeleaf",
    "springboot-starter-validation",
    "springboot-starter-web",
    "springboot-starter-webflux",
]
