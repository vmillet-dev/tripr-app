[versions]
archunit = "1.4.0"
auth0-jwt = "4.5.0"
h2 = "2.3.232"
httpclient5 = "5.4.3"
jackson-kotlin = "2.18.3"
kotlin = "2.0.21"
ksp = "2.0.21-1.0.27"
liquibase = "4.31.1"
mockk = "1.13.17"
postgresql = "42.7.5"
spring-boot = "3.4.4"
spring-dependency-management = "1.1.7"
springdoc-openapi = "2.8.6"
testcontainers = "1.20.6"
updater = "1.0.0"
konvert = "4.0.1"

[libraries]
apache-httpclient5 = { module = "org.apache.httpcomponents.client5:httpclient5-testing", version.ref = "httpclient5" }
archunit-junit5 = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }
auth0-java-jwt = { module = "com.auth0:java-jwt", version.ref = "auth0-jwt" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
liquibase-core = { module = "org.liquibase:liquibase-core", version.ref = "liquibase" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
springboot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
springboot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot" }
springboot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
springboot-starter-mail = { module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot" }
springboot-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
springboot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
springboot-starter-thymeleaf = { module = "org.springframework.boot:spring-boot-starter-thymeleaf", version.ref = "spring-boot" }
springboot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
springboot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
springboot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
konvert-api = { module = "io.mcarle:konvert-api", version.ref = "konvert" }
konvert-spring = { module = "io.mcarle:konvert-spring-annotations", version.ref = "konvert" }
ksp-konvert = { module = "io.mcarle:konvert", version.ref = "konvert" }
ksp-konvert-spring = { module = "io.mcarle:konvert-spring-injector", version.ref = "konvert" }

[plugins]
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "updater" }

[bundles]
springboot = [
    "springboot-starter-data-jpa",
    "springboot-starter-mail",
    "springboot-starter-security",
    "springboot-starter-thymeleaf",
    "springboot-starter-validation",
    "springboot-starter-web",
    "springboot-starter-webflux",
]
