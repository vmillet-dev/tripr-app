name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('backend/gradle/wrapper/gradle-wrapper.properties', '**/build.gradle.kts') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission to Gradle wrapper
        working-directory: backend
        run: chmod +x gradlew

      - name: Build backend
        working-directory: backend
        run: ./gradlew assemble

  test-backend:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('backend/gradle/wrapper/gradle-wrapper.properties', '**/build.gradle.kts') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission to Gradle wrapper
        working-directory: backend
        run: chmod +x gradlew

      - name: Run backend tests
        working-directory: backend
        run: ./gradlew test

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

  test-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: frontend
        run: |
          npm run test

  e2e-tests:
    runs-on: ubuntu-latest
    #    needs: [test-backend, test-frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cypress run
        working-directory: e2e
        run: |
          npm i
          docker compose -f ../devops/compose-e2e.yaml up -d --wait app-e2e
          sleep 10
          curl -i http://127.0.0.1:8080
          npm run cypress:ci
