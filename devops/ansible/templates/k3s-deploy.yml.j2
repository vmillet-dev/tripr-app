apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ app_name }}
  namespace: {{ app_name }}
  labels:
    app: {{ app_name }}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ app_name }}
  template:
    metadata:
      labels:
        app: {{ app_name }}
    spec:
      containers:
      - name: {{ app_name }}
        image: {{ lookup('env', 'ANSIBLE_DOCKER_IMAGE') }}
        resources:
          requests:
            memory: "500Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "2"
        ports:
        - containerPort: 8080
          name: http
        envFrom:
        - secretRef:
            name: {{ app_name }}-secrets
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 65
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 30
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 65
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-external
  namespace: {{ app_name }}
spec:
  type: ExternalName
  externalName: {{ db_host_ip }}
  ports:
  - port: 5432
    targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: {{ app_name }}-service
  namespace: {{ app_name }}
spec:
  selector:
    app: {{ app_name }}
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ app_name }}-ingress
  namespace: {{ app_name }}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ app_name }}-service
                port:
                  number: 80
