---
- name: Install K3s
  hosts: raspberry
  become: yes

  tasks:
    - name: Check if K3S is installed
      command: which k3s
      register: k3s_check
      failed_when: false
      changed_when: false

    - name: Install K3s if needed
      shell: curl -sfL https://get.k3s.io | sh -
      when: k3s_check.rc != 0

    - name: Wait K3S to be ready
      wait_for:
        port: 6443
        host: localhost
        timeout: 60
      when: k3s_check.rc != 0

    - name: Install cert-manager
      shell: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml
      register: cert_manager_install

    - name: Wait for cert-manager to be ready
      shell: |
        kubectl wait --for=condition=ready pod -l app.kubernetes.io/instance=cert-manager -n cert-manager --timeout=300s
      retries: 3
      delay: 10

    - name: Create Let's Encrypt issuer
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-prod
        spec:
          acme:
            server: https://acme-v02.api.letsencrypt.org/directory
            email: mail@toto.com
            privateKeySecretRef:
              name: letsencrypt-prod-key
            solvers:
            - http01:
                ingress:
                  class: traefik
        EOF
